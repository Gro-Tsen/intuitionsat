#! /usr/local/bin/perl -w

## Generate a LaTeX file that produces a table summarizing the
## validity of various formulas across various frames.

use utf8;
use strict;
use warnings;

binmode STDIN, ":utf8";
binmode STDOUT, ":utf8";
binmode STDERR, ":utf8";

my @frames = (
    "testframes/basic-1.dot",
    "testframes/basic-2.dot",
    "testframes/basic-3.dot",
    "testframes/basic-4.dot",
    "testframes/basic-5.dot",
    "testframes/skvortsov-1.dot",
    "testframes/skvortsov-2.dot",
    "testframes/skvortsov-3.dot",
    "testframes/skvortsov-4.dot",
    "testframes/skvortsov-5.dot",
    "testframes/skvortsov-6.dot",
    "testframes/skvortsov-7.dot",
    "testframes/skvortsov-8.dot",
    "testframes/skvortsov-9.dot",
    "testframes/skvortsov-10.dot"
);

my @forms = (
    "testforms/lem.form",
    "testforms/smetanich.form",
    "testforms/bd2.form",
    "testforms/goedel-dummett.form",
    "testforms/wlem.form",
    "testforms/bc3.form",
    "testforms/scott.form",
    "testforms/jankov-r.form",
    "testforms/bw2.form",
    "testforms/kreisel-putnam.form",
    "testforms/two-of-three.form",
    "testforms/skvortsov.form",
    "testforms/ceitin-star.form",
    "testforms/bb2.form",
    "testforms/ceitin.form",
    "testforms/plisko-p3.form",
    "testforms/jankov-i3.form",
    "testforms/anti-scott.form",
    "testforms/rose.form",
    "testforms/plisko-p.form",
    "testforms/plisko-l.form"
);

sub framebasename {
    my $str = shift;
    $str =~ s/^.*\///;
    $str =~ s/\.dot$//;
    return $str;
}

sub formbasename {
    my $str = shift;
    $str =~ s/^.*\///;
    $str =~ s/\.form$//;
    return $str;
}

sub filecontent {
    my $fname = shift;
    open my $f, "<", $fname or die "can't open $fname: $!";
    binmode $f, ":utf8";
    my $s;
    { local $/ = undef; $s = <$f>; }
    close $f;
    chomp $s;
    return $s;
}

sub latexform {
    my $str = shift;
    my $outstr = "";
    my $nesting = 0;
    while ( $str ne "" ) {
	if ( $str =~ s/^([^\(\)]+)//g ) {
	    my $substr = $1;
	    my $penalty = sprintf("\\penalty%d\\relax", $nesting*300);
	    my $skipstretch = 4-2*$nesting>0 ? sprintf(" plus %dmu\\relax", 4-2*$nesting) : "";
	    my $skip0 = 5-2*$nesting>=0 ? sprintf("\\mskip%dmu%s\\relax", 5-2*$nesting, $skipstretch) : "";
	    my $skip1 = 4-2*$nesting>=0 ? sprintf("\\mskip%dmu%s\\relax", 4-2*$nesting, $skipstretch) : "";
	    my $skip2 = 3-2*$nesting>=0 ? sprintf("\\mskip%dmu%s\\relax", 3-2*$nesting, $skipstretch) : "";
	    $substr =~ s/([a-z])([0-9]+)/$1\_\{$2\}/g;
	    $substr =~ s/∧/$skip2\\land$penalty$skip2 /g;
	    $substr =~ s/∨/$skip1\\lor$penalty$skip1 /g;
	    $substr =~ s/⇒/$skip0\\Rightarrow$penalty$skip0 /g;
	    $substr =~ s/¬/\\neg /g;
	    $outstr .= $substr;
	} elsif ( $str =~ s/^\(// ) {
	    $outstr .= "(";
	    $nesting++;
	} elsif ( $str =~ s/^\)// ) {
	    $outstr .= ")";
	    $nesting--;
	}
    }
    return $outstr;
}

print <<'__EOF__';
\documentclass[10pt,a4paper]{article}  % -*- coding: utf-8 -*-
%% This file is automatically generated.  Do not edit!
\usepackage[a4paper,margin=1.5cm]{geometry}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{newtxtext}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{pifont}
\usepackage{supertabular}
%\usepackage{adjustbox}
\usepackage{graphicx}
\usepackage[usenames,svgnames]{xcolor}
\newcommand{\sideways}[1]{\rotatebox{90}{#1}}%
\newcommand{\cmark}{\ding{51}}%
\newcommand{\xmark}{\ding{55}}%
\begin{document}
\setlength{\parindent}{0pt}
__EOF__

print "\\begin{supertabular}", ("{l|" . ("c" x scalar(@frames)) . "}"), "\n";

for ( my $j=0 ; $j<scalar(@frames) ; $j++ ) {
    printf "\&\\sideways{\\texttt{%s}}\n", framebasename($frames[$j]);
}
print "\\\\\\hline\n";

for ( my $i=0 ; $i<scalar(@forms) ; $i++ ) {
    my $form = filecontent($forms[$i]);
    printf STDERR "Testing formula %s (%s)\n", $forms[$i], $form;
    printf "\\texttt{%s}\n", formbasename($forms[$i]);
    for ( my $j=0 ; $j<scalar(@frames) ; $j++ ) {
	system "./intuitionsat.pl", "-q", "-k", $frames[$j], "-f", $form;
	my $isvalid;
	if ( $? == -1 ) {
	    die "failed to run intuitionsat.pl: $!";
	} elsif ( $? == 0 ) {
	    $isvalid = 1;
	} elsif ( $? == 256 ) {
	    $isvalid = 0;
	} else {
	    die "intuitionsat.pl exited with return code $?";
	}
	# my $isvalid = rand() < 0.5;
	printf "\&%s", ($isvalid ? "\\textcolor{Green}{\\cmark}" : "\\textcolor{DarkRed}{\\xmark}");
    }
    print "\n";
    print "\\\\\n";
}

print "\\end{supertabular}\n";

print "\n\\vskip 15pt plus 1fil\\relax\n";

print "\\textbf{Formulas:}\n\\par\\nobreak\n";
print "\\begin{supertabular}{lp{0.8\\textwidth}}\n";
for ( my $i=0 ; $i<scalar(@forms) ; $i++ ) {
    printf "\\texttt{%s}\n", formbasename($forms[$i]);
    # printf "&\\adjustbox{max width=0.8\\textwidth}{\$%s\$}\n", latexform(filecontent($forms[$i]));
    # printf "&\\begin{minipage}[t]{0.8\\textwidth}{\$%s\$}\\end{minipage}\n", latexform(filecontent($forms[$i]));
    printf "&\$%s\$\n", latexform(filecontent($forms[$i]));
    printf "\\\\%s\n", ($i<scalar(@forms)-1?"[1.5pt]":"");
}
print "\\end{supertabular}\n";

print "\n\\vskip 15pt plus 1fil\\relax\n";

print "\\textbf{Frames:}\n\\par\\nobreak\n";

print "{\\setlength{\\lineskip}{24pt plus 12pt minus 12pt}\n";

for ( my $j=0 ; $j<scalar(@frames) ; $j++ ) {
    printf "\\penalty0\\hskip 2em plus 1fil\\relax\n" if $j>0;
    printf STDERR "Drawing frame %s\n", $frames[$j];
    print "\\begin{tabular}[t]{ll}\n";
    printf "\\texttt{%s}\n", framebasename($frames[$j]);
    my $pdffile = $frames[$j];
    $pdffile =~ s/(?:\.dot)$//;
    system "dot", "-Tpdf", "-Grankdir=BT", "-Gmargin=0", $frames[$j], "-o", "${pdffile}.pdf";
    if ( $? == -1 ) {
	die "failed to run dot: $!";
    } elsif ( $? ) {
	die "dot exited with return code $?";
    }
    print "\\\\\n";
    printf "\\includegraphics[scale=0.5]{%s}\n", $pdffile;
    print "\\end{tabular}\n";
}

print "\\par}\n";

print "\n\\vfill\n";

print <<'__EOF__';
\end{document}
__EOF__
